import requests
import time

# Replace the beow API key with your actual virusTotal API key
API_KEY = '62483c8b2ed4cfa29b5ecebaed6a7de016dedde27bd6923969547009c8f5f516'
FILE_PATH = '/home/kali/Desktop/NetworkTrafficAnalyzer/eicar_test_file.txt'  # Replace with the path to the file you want to scan

def scan_file(api_key, file_path):
    # URL for VirusTotal file upload
    """Uploads a file to VirusTotal for scanning and returns the scan ID.
    
    Args:
        api_key (str): The VirusTotal API key for authentication.
        file_path (str): The path to the file to be scanned.
    
    Returns:
        str or None: The scan ID if the file was successfully uploaded, None otherwise.
    
    Raises:
        FileNotFoundError: If the specified file_path does not exist.
        requests.RequestException: If there's an error in making the HTTP request.
    """
    url = 'https://www.virustotal.com/api/v3/files'

    # Headers including the API key
    headers = {
        'x-apikey': api_key
    }

    # Open the file in binary mode
    with open(file_path, 'rb') as file:
        files = {'file': (file_path, file)}
        # Upload the file
        response = requests.post(url, headers=headers, files=files)
    
    if response.status_code == 200:
        # Get the scan ID from the response
        scan_id = response.json()['data']['id']
        print(f"File uploaded successfully. Scan ID: {scan_id}")
        return scan_id
    else:
        print(f"Failed to upload file. Status code: {response.status_code}")
        print(response.json())
        return None

def get_scan_result(api_key, scan_id):
    """Gets the result of a VirusTotal scan for a given scan ID.
    
    Args:
        api_key (str): The API key for authenticating with VirusTotal.
        scan_id (str): The ID of the scan to retrieve results for.
    
    Returns:
        dict: A dictionary containing the scan results if successful and the scan is completed.
        None: If the API request fails or encounters an error.
    
    Raises:
        requests.exceptions.RequestException: If there's an error with the HTTP request.
    
    Note:
        This function polls the VirusTotal API every 10 seconds until the scan is completed.
        It may take some time for large files or during high traffic periods.
    """
    url = f'https://www.virustotal.com/api/v3/analyses/{scan_id}'
    headers = {
        'x-apikey': api_key
    }
    while True:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            json_response = response.json()
            status = json_response['data']['attributes']['status']
            if status == 'completed':
                return json_response
            else:
                print("Scan in progress, waiting 10 seconds...")
                time.sleep(10)
        else:
            print(f"Failed to get scan result. Status code: {response.status_code}")
            return None

# Run the scan and get results
scan_id = scan_file(API_KEY, FILE_PATH)
if scan_id:
    result = get_scan_result(API_KEY, scan_id)
    if result:
        # Pretty print the scan results
        print("Scan Results:")
        for engine, report in result['data']['attributes']['results'].items():
            print(f"{engine}: {report['category']}")
    else:
        print("No scan results found.")
